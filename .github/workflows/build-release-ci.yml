name: Build Release CI Compara Precos APP

on:
  workflow_dispatch:
    inputs:
      tagname:
        description: 'Version name'
        required: true
        default: 'v1.0.0'
        type: string
      track:
        description: 'Track'
        required: true
        default: 'internal'
        type: string
      status:
        description: 'Status'
        required: true
        default: 'draft'
        type: string

env:
  ADMOB_APP_ID: ${{ secrets.ADMOB_APP_ID }}
  DEVICE_TEST_AD_ID: ${{ secrets.DEVICE_TEST_AD_ID }}
  ADMOB_OPEN_APP_TEST_ID: ${{ secrets.ADMOB_OPEN_APP_TEST_ID }}
  ADMOB_OPEN_APP_ID: ${{ secrets.ADMOB_OPEN_APP_ID }}
  FIREBASE_GOOGLE_SERVICES: ${{ secrets.FIREBASE_GOOGLE_SERVICES }}
  SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
  SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
  SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
  SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

jobs:
  build-release:
    runs-on: ubuntu-latest

    steps:

      - name: Setup checkout
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          chmod +x .github/set-key.sh
          .github/set-key.sh
        shell: bash

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permissions for gradlew
        run: chmod +x ./gradlew

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Create local.properties
        run: echo "ADMOB_APP_ID=${{ secrets.ADMOB_APP_ID }}" > local.properties

      - name: Run Tests
        uses: reactivecircus/android-emulator-runner@v2.25.0
        with:
          api-level: 30
          arch: x86_64
          channel: stable
          target: google_apis
          profile: pixel_6
          avd-name: Test_Pixel6_Google_fhd_2
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: ./gradlew jacocoTestReport

      - name: Generate UI tests jacoco report
        if: ${{ always() }}
        uses: actions/upload-artifact@v3.1.3
        with:
          name: android-ui-tests-reports
          path: '**/build/reports/androidTests/'

      - name: Generate Unit tests jacoco report
        if: ${{ always() }}
        uses: actions/upload-artifact@v3.1.3
        with:
          name: android-unit-tests-reports
          path: '**/build/reports/tests/testReleaseUnitTest'

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

        run: echo "$ENCODED_STRING" | base64 --decode > keystore.jks

      - name: Build Release bundle
        run: ./gradlew app:signReleaseBundle

      - name: Build Release apk
        run: ./gradlew app:assembleRelease

      - name: Get release file apk path
        id: releaseApk
        run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

      - name: Get obfuscate mapping file
        id: obfuscateFile
        run: echo "mappingFile=$(find app/build/outputs/mapping/release/mapping.txt)" >> $GITHUB_OUTPUT

      - name: Set app properties
        id: properties
        run: |
          echo "versionName=$(./gradlew -q printVersionInfo | grep 'VersionName' | awk '{print $2}')" >> $GITHUB_OUTPUT
          echo "versionCode=$(./gradlew -q printVersionInfo | grep 'VersionCode' | awk '{print $2}')" >> $GITHUB_OUTPUT
          echo "branch=$(echo ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}} | tr '/' '-')" >> $GITHUB_OUTPUT

      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: compara-precos_prod_v${{ steps.properties.outputs.versionName }}_vc${{ steps.properties.outputs.versionCode }}_branch_${{ steps.properties.outputs.branch }}.apk
          path: ${{ steps.releaseApk.outputs.apkfile }}

      - name: Upload obfuscate mapping file
        uses: actions/upload-artifact@v3
        with:
          name: mapping.txt
          path: ${{ steps.obfuscateFile.outputs.mappingFile }}

      - name: Send Release to Google Play Console
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.z1.comparaprecos
          releaseFiles: ./app/build/outputs/bundle/release/*.aab
          status: ${{ github.event.inputs.status }}
          track: ${{ github.event.inputs.track }}

  create-tag:
    runs-on: ubuntu-latest
    needs: build-release

    if: ${{ github.event.inputs.track == 'production' }}

    steps:
      - name: GitHub Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ github.event.inputs.tagname }}
          prerelease: false